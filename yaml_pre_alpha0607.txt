openapi: 3.0.1
info:
  title: キヤノンデジタル帳票サービス API
  description: キヤノンデジタル帳票サービスのAPI仕様
#  termsOfService: '{URL}'
#  contact:
#    email: mail@example.com
#  license:
#    name: '{ライセンス}'
#    url: http://ライセンスURL
  version: 0.1.0
#externalDocs:
#  description: Find out more about Swagger
#  url: http://swagger.io
servers:
- url: https://endpoint-id-dev1.execute-api.us-east-1.vpce.amazonaws.com
  description: 開発環境1用
- url: https://endpoint-id-dev2.execute-api.us-east-1.vpce.amazonaws.com
  description: 開発環境2用
- url: https://endpoint-id-dev3.execute-api.us-east-1.vpce.amazonaws.com
  description: 開発環境3用
- url: https://endpoint-id-it.execute-api.us-east-1.vpce.amazonaws.com
  description: 評価環境用
- url: https://endpoint-id-prod.execute-api.us-east-1.vpce.amazonaws.com
  description: 本番環境用
tags:
- name: 資材管理
  description: |-
    PDF、SVG生成に使用する資材（フォーム、イメージ、付加価値）を管理します。
    資材管理用API Keyの指定が必要です。
- name: 印刷用PDF生成
  description: |-
    印刷用PDFの生成を行います。
    PDF/SVG生成用のAPI Keyの指定が必要です。
- name: 表示用PDF生成
  description: |-
    表示用PDFの生成を行います。
    PDFセキュリティ属性による保護を行えます。
    PDF/SVG生成用のAPI Keyの指定が必要です。
- name: 付加価値機能付きSVG生成
  description: |-
    付加価値機能付きSVGの生成を行います。
    PDF/SVG生成用のAPI Keyの指定が必要です。
- name: 付加価値機能なしSVG生成
  description: |-
    付加価値機能を持たないプレーンなSVGの生成を行います。
    付加価値定義エディタからのみ使用します。
    付加価値定義エディタ用API Keyの指定が必要です。
paths:
  /resources/{type}:
    parameters:
    - name: type
      in: path
      description: リソース種別（forms|images|svgext）
      required: true
      schema:
        type: string
        enum: [forms, images, svgext]
    get:
      tags:
      - 資材管理
      summary: 資材の取得準備を開始する
      description: |-
        資材の取得準備を開始します。
        資材の種類（フォーム、イメージ、付加価値定義）単位での一括取得となります。
        リクエスト受け付け後、非同期で資材のZIP圧縮を開始し、S3へアップロードします。
        処理状態をレスポンスのURLで確認して下さい。
      operationId: createZip
      responses:
        202:
          description: |-
            資材の取得準備を受け付けました。
          content:
            text/plain:
              schema:
                type: string
                pattern: ^https://.+
                example: 処理状態確認URL（.../resources/{type}/{taskId}）
        401:
          description: API Key の指定に誤りがあります。
          content: {}
      deprecated: false
      security:
      - apiKey: []
    post:
      tags:
      - 資材管理
      summary: 資材の登録を開始する
      description: |-
        資材の登録を開始します。
        資材の種類（フォーム、イメージ、付加価値定義）単位での一括登録となります。
        レスポンスの先頭行のS3 PresignedUrlに、同一種類の資材を全て圧縮したZIPファイルをアップロードします。
        アップロード完了後、レスポンスの2行目のURLに対してPUTリクエストを送信し、資材の反映を行います。
      operationId: createPresignedUrl
      responses:
        200:
          description: |-
            アップロード先URLと処理状態確認URLを改行区切りのプレーンテキストで返します。
          content:
            text/plain:
              schema:
                type: string
                pattern: ^https://.+\nhttps://.+/resources/(forms|images|svgext)/.+$
                example: |-
                  S3 PresignedUrl<改行>
                  アップロード完了通知・処理状態確認URL（.../resources/{type}/{id}）
        401:
          description: API Key の指定に誤りがあります。
          content: {}
      deprecated: false
      security:
      - apiKey: []
  /resources/{type}/{taskId}:
    parameters:
    - name: type
      in: path
      description: リソース種別（forms|images|svgext）
      required: true
      schema:
        type: string
        enum: [forms, images, svgext]
    - name: taskId
      in: path
      description: タスクID
      required: true
      schema:
        type: string
        format: uuid
    get:
      tags:
      - 資材管理
      summary: 資材の反映/取得準備状況を確認する
      description: 資材の反映/取得準備状況を確認します。
      operationId: getStatus
      responses:
        202:
          description: |-
            処理中です。
            待機後、再確認して下さい。
          content: {}
        200:
          description: |-
            反映・取得準備が正常終了しました。
            反映完了の場合は何も返しません。
            取得準備完了の場合は、取得用の S3 PresignedUrl を返します。
          content:
            text/plain:
              schema:
                type: string
                pattern: ^https://.+$
                example: |-
                  S3 PresignedUrl
        401:
          description: API Key の指定に誤りがあります。
          content: {}
      deprecated: false
      security:
      - apiKey: []
    put:
      tags:
      - 資材管理
      summary: 資材登録時のS3保存完了を通知する
      description: |-
        資材のS3保存完了を通知し、資材の反映を開始します。
        反映結果は GET で確認します。
      operationId: notifyUploaded
      responses:
        202:
          description: |-
            処理を受け付けました。
            GET で処理状態を確認します。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
      deprecated: false
      security:
      - apiKey: []
  /documents/pdf/printable:
    post:
      tags:
      - 印刷用PDF生成
      requestBody:
        description: 印刷用PDF生成に必要な情報
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/PdfSecurityRequest'
      responses:
        200:
          description: PDFの生成を行います。
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PdfSecurityResponse'
        401:
          description: API Key の指定に誤りがあります。
          content: {}
  /documents/pdf/printable/{jobId}:
    parameters:
    - name: jobId
      in: path
      description: ジョブID
      required: true
      schema:
        type: string
        format: uuid
#    put:
#      tags:
#      - 印刷用PDF生成
#      responses:
#        200:
#          description: PDFの生成を行います。
#          content: {}
#        401:
#          description: API Key の指定に誤りがあります。
#          content: {}
    get:
      tags:
      - 印刷用PDF生成
      responses:
        200:
          description: PDFの生成を行います。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
  /documents/pdf/secured:
    post:
      tags:
        - 表示用PDF生成
      requestBody:
        description: 表示用PDF生成に必要な情報
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/PdfSecurityRequest'
      responses:
        200:
          description: |-
            アップロード先URLと処理状態確認URLを改行区切りのプレーンテキストをjson形式で返します。
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PdfSecurityResponse'
        401:
          description: API Key の指定に誤りがあります。
          content: {}
  /documents/pdf/secured/{jobId}:
    parameters:
    - name: jobId
      in: path
      description: ジョブID
      required: true
      schema:
        type: string
        format: uuid
#    put:
#      tags:
#      - 表示用PDF生成
#      responses:
#        200:
#          description: PDFの生成を行います。
#          content: {}
#        401:
#          description: API Key の指定に誤りがあります。
#          content: {}
    get:
      tags:
      - 表示用PDF生成
      responses:
        200:
          description: |-
            表示用PDFの処理状態をjson形式で返します。
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PdfStatusResponse'
        401:
          description: API Key の指定に誤りがあります。
          content: {}
  /documents/fsvg/:
    post:
      tags:
      - 付加価値機能付きSVG生成
      responses:
        200:
          description: PDFの生成を行います。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
  /documents/fsvg/{jobId}:
    parameters:
    - name: jobId
      in: path
      description: ジョブID
      required: true
      schema:
        type: string
        format: uuid
    put:
      tags:
      - 付加価値機能付きSVG生成
      responses:
        200:
          description: PDFの生成を行います。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
    get:
      tags:
      - 付加価値機能付きSVG生成
      responses:
        200:
          description: PDFの生成を行います。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
  /documents/svg/plain:
    post:
      tags:
      - 付加価値機能なしSVG生成
      responses:
        200:
          description: PDFの生成を行います。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
  /documents/svg/{jobId}:
    parameters:
    - name: jobId
      in: path
      description: ジョブID
      required: true
      schema:
        type: string
        format: uuid
    put:
      tags:
      - 付加価値機能なしSVG生成
      responses:
        200:
          description: PDFの生成を行います。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
    get:
      tags:
      - 付加価値機能なしSVG生成
      responses:
        200:
          description: PDFの生成を行います。
          content: {}
        401:
          description: API Key の指定に誤りがあります。
          content: {}
components: 
  schemas:
    UploadRequest:
      required:
        - files
      properties:
        files:
          type: array
          items:
            type: string
    PrintablePdfRequest:
      type: object
      required:
        - formFileName
        - fieldDataFileName
      properties:
        formFileName:
          type: string
          pattern: /^[0-9a-zA-Z_-]+\.(fcp|fcx)$/i
        fieldDataFileName:
          type: string
          pattern: /^[0-9a-zA-Z_-]+\.dat$/i
        images:
          type: array
          items:
            type: string
            pattern: /^[0-9a-zA-Z_-]+\.(bmp|emf|wmf|tif|tiff|jpg|jpeg|gif|png)$/i
        docName:
          type: string
          minLength: 0
          maxLength: 128
        pdfSecurity:
          type: object
          $ref: '#/components/schemas/PdfSecurity'
    PdfSecurity:
      type: object
      properties:
        enable:
          type: boolean
          description: |-
            セキュリティを有効にするか設定します。
            false の場合、PDFセキュリティ属性は設定しません。
        masterRandom:
          type: boolean
          description: |-
            PDFの編集パスワードをランダム化するか設定します。
            true の場合、編集パスワードは masterPass の値 + ランダムな値となります。
        masterPass:
          type: string
          minLength: 0
          maxLength: 32
          pattern: ^[!-~]+$

    PdfSecurityRequest:
      type: object
      required:
        - form_name
        - title
        - secuire_attb
        - upload_files
      properties:
        form_name:
          type: string
          description: PDF生成に使用するFCP/FCX名
          example: xxx.fcx
        title:
          type: string
          description: PDFのプロパティ「タイトル」として設定する値
          example: ドキュメントタイトル
        secuire_attb:
          type: string
          description: PDFセキュリティ属性
          example: 編集パスワードのランダム化
        upload_files:
          type: array
          items: 
            type: string
          example: [file-name1, file-name2]

    PdfSecurityResponse:
      type: object
      required:
        - job_id
        - upload_files
        - check_url
      properties:
        job_id:
          type: string
          description: ジョブID
          example: abcdefg
        upload_files:
          type: array
          description: ファイル名とアップロードURL（S3 Presigned URL）
          items:
            $ref: '#/components/schemas/UploadEntry'
        check_url:
          type: string
          description: 処理状態を確認する際のURL。
          example: http://xxxxxx/xxx
    
    PdfStatusResponse:
      type: object
      required:
        - check_url
        - status
        - download_url
      properties:
        check_url:
          type: string
          description: 次回状態確認を行うURL。
          example: http://xxxxxx/xxx
        status:
          type: string
          description: 現在の処理状態
          example: 開始待ち or (PDF生成中 or 正常終了)
        download_url:
          type: string
          description: PDFダウンロードURL。
          example: http://xxxxxx/xxx

# fm-pdfsec-masterpass    PDFセキュリティ変更のためのパスワード  字  32文字以内の印刷可能な7-bit ASCII文字   "指定した値
# 前後のスペースは無視される"          指定したパスワードは、配信サーバに送られる（※）が、保存されることはない。従って、配信サーバに帳票を保存後、WebMonitorでPDFにエクスポートする際、パスワードは設定されない。
#                     "masterrandom設定が最終的な評価で”yes”になった場合は、このパスワード設定は疑似乱数を含むマスターパスワードの接頭語として利用される。
# masterrandom設定の最終的な評価が”no”になる場合で、masterpasswordがuserpasswordと同じであると、masterpasswordによるセキュリティは無効になる。これはAcrobatの仕様。"
#         空  空文字列として動作          
#         その他の値  漢字など使用不可能な文字や長すぎる文字列が指定された場合には、エラーを発生する          ※稼動属性ファイルのオプションキーに設定されていることが前提（出荷時設定あり）
# fm-pdfsec-userpass    PDF文章を開くためのパスワード  字  32文字以内の印刷可能な7-bit ASCII文字   "指定した値
# 前後のスペースは無視される"          指定したパスワードは、配信サーバに送られる（※）が、保存されることはない。従って、配信サーバに帳票を保存後、WebMonitorでPDFにエクスポートする際、パスワードは設定されない。
#         空  "空文字列として動作
# この場合、ユーザは受け取ったPDFをパスワードなしでオープンできる"          
#         その他の値  漢字など使用不可能な文字や長すぎる文字列が指定された場合には、エラーを発生する          ※稼動属性ファイルのオプションキーに設定されていることが前提（出荷時設定あり）
# fm-pdfsec-encryptalgorithm    PDF暗号化アルゴリズム  字  AES（出荷時設定）  AESで暗号化する          
#         RC4  RC4で暗号化する          
#         その他の値  不定（動作保証外）          
# fm-pdfsec-length    暗号強度  A  40 【隠し】  40ビット強度          "AES 256bitで暗号化したPDFを開くには、Adobe Reader Ver9以上が必要。
# 256bitを指定した場合、Unixコンポーザでは128bitに丸められる。"
#         128（出荷時設定）  128ビット強度          
#         256  256ビット強度          
#         その他の値  不定（動作保証外）          
# fm-pdfsec-denyprint    印刷許可  A  yes  許可しない          
#         no（出荷時設定）  許可する          
#         その他の値  no          
# fm-pdfsec-denyedit    文書変更  A  yes  許可しない          
#         no（出荷時設定）  許可する          
#         その他の値  no          
# fm-pdfsec-denycopy    テキストとグラフィックのコピー  A  yes  許可しない          
#         no（出荷時設定）  許可する          
#         その他の値  no          
# fm-pdfsec-denynotes    注釈とフォームフィールドの追加と変更  A  yes  許可しない          
#         no（出荷時設定）  許可する          
#         その他の値  no          
# fm-pdfsec-denyformfill    フォームフィールドへの入力  A  yes  許可しない          
#           128 bit もしくは 256 bit強度を選択時に有効          
#         no（出荷時設定）  許可する          
#         その他の値  no          
# fm-pdfsec-denyaccessibility    障害者用デバイスへ文書をコピー  A  yes  許可しない          
#           128 bit もしくは 256 bit強度を選択時に有効          
#         no（出荷時設定）  許可する          
#         その他の値  no          
# fm-pdfsec-denyassemble    文書構成の変更  A  yes  許可しない          
#           128 bit もしくは 256 bit強度を選択時に有効          
#         no（出荷時設定）  許可する          
#         その他の値  no          
# fm-pdfsec-denyhqprint    高品質印刷  A  yes  許可しない          
#           128 bit もしくは 256 bit強度を選択時に有効          
#         no（出荷時設定）  許可する          
#         その他の値  no          
    UploadResponse:
      type: object
      required:
        - urls
      properties:
        urls:
          type: array
          items:
            $ref: '#/components/schemas/UploadEntry'
    UploadEntry:
      type: object
      required:
        - name
        - s3url
      properties:
        name:
          type: string
          example: xxxxxxxx
        s3url:
          type: string
          example: http://xxxxxx/xxxxx
    NotifyUploadedRequest:
      $ref: '#/components/schemas/PrintablePdfRequest'
      


          
# components:
#   schemas:
#     Order:
#       type: object
#       properties:
#         id:
#           type: integer
#           format: int64
#         petId:
#           type: integer
#           format: int64
#         quantity:
#           type: integer
#           format: int32
#         shipDate:
#           type: string
#           format: date-time
#         status:
#           type: string
#           description: Order Status
#           enum:
#           - placed
#           - approved
#           - delivered
#         complete:
#           type: boolean
#           default: false
#       xml:
#         name: Order
#     Category:
#       type: object
#       properties:
#         id:
#           type: integer
#           format: int64
#         name:
#           type: string
#       xml:
#         name: Category
#     User:
#       type: object
#       properties:
#         id:
#           type: integer
#           format: int64
#         username:
#           type: string
#         firstName:
#           type: string
#         lastName:
#           type: string
#         email:
#           type: string
#         password:
#           type: string
#         phone:
#           type: string
#         userStatus:
#           type: integer
#           description: User Status
#           format: int32
#       xml:
#         name: User
#     Tag:
#       type: object
#       properties:
#         id:
#           type: integer
#           format: int64
#         name:
#           type: string
#       xml:
#         name: Tag
#     Pet:
#       required:
#       - name
#       - photoUrls
#       type: object
#       properties:
#         id:
#           type: integer
#           format: int64
#         category:
#           $ref: '#/components/schemas/Category'
#         name:
#           type: string
#           example: doggie
#         photoUrls:
#           type: array
#           xml:
#             name: photoUrl
#             wrapped: true
#           items:
#             type: string
#         tags:
#           type: array
#           xml:
#             name: tag
#             wrapped: true
#           items:
#             $ref: '#/components/schemas/Tag'
#         status:
#           type: string
#           description: pet status in the store
#           enum:
#           - available
#           - pending
#           - sold
#       xml:
#         name: Pet
#     ApiResponse:
#       type: object
#       properties:
#         code:
#           type: integer
#           format: int32
#         type:
#           type: string
#         message:
#           type: string
  securitySchemes:
    apiKey:
      description: |-
        環境（開発1-3、評価、本番）、及び用途（資材管理、PDF/SVG生成、付加価値定義エディタ）によりキーの値は変わります。
      type: apiKey
      name: x-api-key
      in: header